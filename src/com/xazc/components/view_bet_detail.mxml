<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 creationComplete="init(event)"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="950" height="500"
		 >
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<mx:DateFormatter id="df" formatString="YYYY-MM-DD JJ:NN:SS"/>
		<mx:DateFormatter id="df1" formatString="YYYY-MM-DD"/>
		<mx:DateFormatter id="df2" formatString="JJ:NN:SS"/>
		
		<s:BorderContainer cornerRadius="10" id="aaa"> 
			<s:backgroundFill> 
				<s:SolidColor 
					color="red" 
					alpha="1"/> 
			</s:backgroundFill> 
		</s:BorderContainer> 
		
	</fx:Declarations>
	<fx:Metadata>
	</fx:Metadata>
	<fx:Script>
		<![CDATA[ 
			import com.xazc.comm.ServerToolImpl;
			import com.xazc.single.CurrentBusinessInfo;
			import com.xazc.single.CurrentUserInfo;
			
			import mx.collections.ArrayCollection;
			import mx.containers.Grid;
			import mx.containers.GridItem;
			import mx.containers.GridRow;
			import mx.controls.Alert;
			import mx.controls.Label;
			import mx.controls.LinkButton;
			import mx.core.FlexGlobals;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.DynamicEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectUtil;
			
			import spark.components.BorderContainer;
			
			//订单状态
			private var titles:ArrayCollection=new ArrayCollection([
				{title:"投注时间",w:120},
				{title:"投注期号",w:100},
				{title:"玩法类型",w:100},
				{title:"投注内容",w:100},
				{title:"注数",w:100},
				{title:"倍数",w:100},
				{title:"金额",w:100}]);
			private var models:ArrayCollection=new ArrayCollection([
				{orderMask:"Time",width:120},
				{orderMask:"IssueNumber",width:100},
				{orderMask:"PlayCode",width:100},
				{orderMask:"BetContent",width:100},
				{orderMask:"BetCount",width:100}, 
				{orderMask:"BetMultiple",width:100},
				{orderMask:"BetMoney",width:100}]);
			
			protected function init(event:FlexEvent):void
			{
				for(var i:int=0;i<titles.length;i++){
					var lab:Label = new Label();
					lab.width = titles[i].w;
					lab.text = titles[i].title;
					lab.styleName = "personalCenterDetailLabelStyle_1_white";
					title_group.addElement(lab);
				}
			}
			
			public function updateViewPropertysValue(arr:ArrayCollection):void
			{
				if(arr == null)return;
				
				list_group.removeAllElements();
				for(var i:int=0;i<arr.length;i++)
				{
					var hgroup:HGroup = new HGroup();
					hgroup.height = 25;
					hgroup.verticalAlign = "middle";
					hgroup.gap = 1;
					for(var j:int=0;j<models.length;j++){
						var lab:Label = new Label();
						lab.width = titles[j].w;
						var str:String = models[j].orderMask;
						if(str == "Time"){
							lab.text = arr[i].Time;
						}else if(str == "IssueNumber"){
							lab.text = arr[i].IssueNumber;
						}else if(str == "PlayCode"){
							lab.text = arr[i].PlayCode;
						}else if(str == "BetContent"){
							lab.text = arr[i].BetContent;
						}else if(str == "BetCount"){
							lab.text = arr[i].BetCount;
						}else if(str == "BetMultiple"){
							lab.text = arr[i].BetMultiple;
						}else if(str == "BetMoney"){
							lab.text = arr[i].BetMoney;
						}
						
						lab.styleName = "personalCenterDetailLabelStyle_1";
						hgroup.addElement(lab);
					}
					list_group.addElement(hgroup);
				}
			}
			
		]]>
	</fx:Script>
	<s:Group width="945" height="100%">
		<s:Rect id="fill" width="100%" height="30">
			<s:fill>
				<s:LinearGradient >
					<s:GradientEntry color="#3b6cc6" alpha="1"/>
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
		
		<!--详细内容-->
		<s:VGroup gap="0" width="100%" height="100%" id="vg">
			<s:HGroup id="title_group" gap="1" height="30" verticalAlign="middle"/>
			
			<s:Scroller width="100%" height="100%" horizontalScrollPolicy="off">
				<s:VGroup id="list_group" gap="1"/>
			</s:Scroller>
			
		</s:VGroup>
	</s:Group>
</s:Group>
